{"version":3,"sources":["store/actions/actionType.js","store/actions/index.js","components/CoinList.js","container/CoinListingPage.js","container/CoinDetailsPage.js","container/PageNotFoundPage.js","App.js","reportWebVitals.js","store/reducers/coinDetails.js","store/reducers/favourites.js","store/reducers/tradeVolume.js","store/reducers/index.js","store/configureStore.js","index.js"],"names":["GET_COIN_DETAILS_SUCCESS","GET_COIN_DETAILS_FAILED","GET_TRADE_VOLUME_SUCCESS","GET_TRADE_VOLUME_FAILED","TOGGLE_FAVOURITE","SORT_PRICE","SORT_VOLUME","apiUrl","getCoinDetails","dispatch","a","axios","get","response","fetchStatus","data","message","getTradeVolume","toggleFav","coin","status","sortCoins","type","res","payload","CoinList","props","favourites","useSelector","state","tradeVolume","coinDetails","history","useHistory","useDispatch","redirect","push","toLowerCase","className","scope","style","cursor","onClick","Object","keys","filter","item","indexOf","searchText","map","i","percentage","last_traded_price","yes_price","src","coinIcon","alt","coinName","volume","isFinite","toFixed","xmlns","viewBox","d","CoinListingPage","useState","handleSearch","useEffect","name","placeholder","autoComplete","onChange","e","target","value","length","CoinDetailsPage","pathname","location","console","log","split","details","trade","toUpperCase","PageNotFoundPage","padding","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","sortable","entries","sort","b","reduce","r","k","v","combineReducers","config","key","storage","whitelist","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","configureStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a9f33b38.chunk.js","sourcesContent":["export const GET_COIN_DETAILS_SUCCESS = \"GET_COIN_DETAILS_SUCCESS\";\nexport const GET_COIN_DETAILS_FAILED = \"GET_COIN_DETAILS_FAILED\";\nexport const GET_TRADE_VOLUME_SUCCESS = \"GET_TRADE_VOLUME_SUCCESS\";\nexport const GET_TRADE_VOLUME_FAILED = \"GET_TRADE_VOLUME_FAILED\";\nexport const TOGGLE_FAVOURITE = \"TOGGLE_FAVOURITE\";\nexport const SORT_PRICE = \"SORT_PRICE\";\nexport const SORT_VOLUME = \"SORT_VOLUME\";","import axios from \"axios\";\nimport {\n    GET_COIN_DETAILS_SUCCESS,\n    GET_COIN_DETAILS_FAILED,\n    GET_TRADE_VOLUME_SUCCESS,\n    GET_TRADE_VOLUME_FAILED,\n    TOGGLE_FAVOURITE\n} from \"./actionType\";\n\nlet apiUrl = \"https://bitbns.com\";\n\nexport const getCoinDetails = () => {\n    return async dispatch => {\n        try {\n            const response = await axios.get(`${apiUrl}/jugApi/coinParams.json`);\n            dispatch(fetchStatus(response.data[0].data[0], GET_COIN_DETAILS_SUCCESS));\n        } catch (err) {\n            dispatch(\n                fetchStatus(\n                    (err && err.message) ||\n                    \"Something went wrong. Please try again later.\",\n                    GET_COIN_DETAILS_FAILED\n                )\n            )\n        }\n    }\n};\n\nexport const getTradeVolume = () => {\n    return async dispatch => {\n        try {\n            const response = await axios.get(`${apiUrl}/order/getTickerWithVolume`);\n            dispatch(fetchStatus(response.data, GET_TRADE_VOLUME_SUCCESS));\n        } catch (err) {\n            dispatch(\n                fetchStatus(\n                    (err && err.message) ||\n                    \"Something went wrong. Please try again later.\",\n                    GET_TRADE_VOLUME_FAILED\n                )\n            )\n        }\n    }\n};\n\nexport const toggleFav = (coin, status) => {\n    return async dispatch => {\n        dispatch(fetchStatus({coin, status}, TOGGLE_FAVOURITE));\n    }\n};\n\nexport const sortCoins = (type) => {\n    return async dispatch => {\n        dispatch(fetchStatus(\"\", type));\n    }\n};\n\nexport const fetchStatus = (res, type) => {\n    return {\n        type: type,\n        payload: res\n    };\n};","import { useDispatch, useSelector } from \"react-redux\";\n\nimport { toggleFav, sortCoins } from \"../store/actions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst CoinList = (props) => {\n  const favourites = useSelector(state => state.favourites);\n  const tradeVolume = props.tradeVolume;\n  const coinDetails = props.coinDetails;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const redirect = (coin) => {\n    history.push(`/${coin.toLowerCase()}`);\n  }\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n        <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Coins\n                  </th>\n                  <th\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => dispatch(sortCoins(\"SORT_PRICE\"))}\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Price ^\n                  </th>\n                  <th\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => dispatch(sortCoins(\"SORT_VOLUME\"))}\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    volume ^\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    percentage\n                  </th>\n                  <th\n                    scope=\"col\"\n                    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                  >\n                    Favourite\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {(() => {\n                  let filters = Object.keys(tradeVolume).filter((item) => {\n                    if (item.toLowerCase().indexOf(props.searchText.toLowerCase()) !== -1) {\n                        return item;\n                    }\n                });\n                return filters.map((coin, i) => {\n                  let percentage = (tradeVolume[coin].last_traded_price - tradeVolume[coin].yes_price) * 100 / tradeVolume[coin].yes_price;\n                  return (\n                    <tr key={`${coin}${i}`} style={{ cursor: \"pointer\" }}>\n                      <td className=\"px-6 py-4 whitespace-nowrap\" onClick={() => redirect(coin)}>\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <img className=\"h-10 w-10 rounded-full\"\n                              src={coinDetails && coinDetails[coin.toLowerCase()] && coinDetails[coin.toLowerCase()].coinIcon} alt=\"\" />\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">{coin}</div>\n                            <div className=\"text-sm text-gray-500\">\n                              {coinDetails && coinDetails[coin.toLowerCase()] && coinDetails[coin.toLowerCase()].coinName}\n                            </div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\" onClick={() => redirect(coin)}>\n                        <div className=\"text-sm text-gray-900\">{tradeVolume[coin].last_traded_price}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\" onClick={() => redirect(coin)}>\n                        <span className=\"text-sm text-gray-900\">\n                          {tradeVolume[coin] && tradeVolume[coin].volume && tradeVolume[coin].volume.volume}\n                        </span>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\" onClick={() => redirect(coin)}>{isFinite(percentage) ? percentage.toFixed(2) : \"-\"}</td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\" onClick={() => dispatch(toggleFav(coin, favourites[coin]))}>\n                        <svg className={`mx-1 w-4 h-4 fill-current text-${favourites[coin] ? \"yellow-500\" : \"gray-400\"}`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z\" /></svg>\n                      </td>\n                    </tr>\n                  )\n                })\n                })()}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CoinList;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CoinList from \"../components/CoinList\";\n\nimport { getCoinDetails, getTradeVolume } from \"../store/actions\";\n\nconst CoinListingPage = () => {\n    const [searchText, handleSearch] = useState(\"\");\n    const coinDetails = useSelector(state => state.coinDetails);\n    const tradeVolume = useSelector(state => state.tradeVolume);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getCoinDetails());\n        dispatch(getTradeVolume());\n    }, []);\n\n    return (\n        <div>\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n                <div className=\"flex items-center justify-between h-16\">\n                    <header className=\"bg-white\">\n                        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n                            <h1 className=\"text-3xl font-bold text-gray-900\">Markets</h1>\n                        </div>\n                    </header>\n\n                </div>\n                <input className=\"border-2 border-gray-300 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                    type=\"text\" name=\"search\" placeholder=\"Search\" autoComplete=\"off\"\n                    onChange={(e)=>handleSearch(e.target.value)}\n                />\n            </div>\n            <main>\n                <div className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n                    {tradeVolume && Object.keys(tradeVolume).length > 0 ? <CoinList tradeVolume={tradeVolume} coinDetails={coinDetails} searchText={searchText} /> : null}\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default CoinListingPage;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { getCoinDetails, getTradeVolume, toggleFav } from \"../store/actions\";\n\nconst CoinDetailsPage = () => {\n    const coinDetails = useSelector(state => state.coinDetails);\n    const tradeVolume = useSelector(state => state.tradeVolume);\n    const favourites = useSelector(state => state.favourites);\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    let pathname = history.location.pathname;\n    console.log(\"pathname\", pathname)\n    pathname = pathname.split(\"/\")\n    pathname = pathname[1]\n\n    useEffect(() => {\n        dispatch(getCoinDetails());\n        dispatch(getTradeVolume());\n    }, []);\n\n    let details = coinDetails[pathname];\n    let trade = tradeVolume[pathname.toUpperCase()];\n\n    return (\n        trade && Object.keys(trade).length > 0 ? <div className=\"bg-white shadow overflow-hidden sm:rounded-lg\">\n            <div className=\"px-4 py-5 sm:px-6\">\n                <div className=\"flex-shrink-0 h-10 w-10\">\n                    <img className=\"h-10 w-10 rounded-full\"\n                        src={details && details.coinIcon} alt=\"\" />\n                </div>\n                <div className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\" onClick={() => dispatch(toggleFav(pathname.toUpperCase(), favourites[pathname.toUpperCase()]))}>\n                    <svg className={`mx-1 w-4 h-4 fill-current text-${favourites[pathname.toUpperCase()] ? \"yellow-500\" : \"gray-400\"}`} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"><path d=\"M10 15l-5.878 3.09 1.123-6.545L.489 6.91l6.572-.955L10 0l2.939 5.955 6.572.955-4.756 4.635 1.123 6.545z\" /></svg>\n                </div>\n            </div>\n            <div className=\"border-t border-gray-200\">\n                <dl>\n                    <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                        <dt className=\"text-sm font-medium text-gray-500\">Coin name</dt>\n                        <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{details && details.coinName ? details.coinName : pathname.toUpperCase()}</dd>\n                    </div>\n                    <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                        <dt className=\"text-sm font-medium text-gray-500\">Last Traded Price</dt>\n                        <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{trade.last_traded_price}</dd>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                        <dt className=\"text-sm font-medium text-gray-500\">Volume</dt>\n                        <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">{trade.volume.volume}</dd>\n                    </div>\n                </dl>\n            </div>\n        </div> : null\n    );\n}\n\nexport default CoinDetailsPage;","const PageNotFoundPage = () => {\n    return (\n        <main>\n            <div className=\"px-4 py-6 sm:px-0\">\n                <div className=\"border-4 border-dashed border-gray-200 rounded-lg h-96\">\n                    <h1 style={{ padding: \"40px\" }}>Page Not Found</h1>\n                </div>\n            </div>\n        </main>\n    );\n}\n\nexport default PageNotFoundPage;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport CoinListingPage from \"./container/CoinListingPage\";\nimport CoinDetailsPage from \"./container/CoinDetailsPage\";\nimport PageNotFoundPage from \"./container/PageNotFoundPage\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={CoinListingPage}\n          />\n          <Route\n            exact\n            path=\"/:id\"\n            component={CoinDetailsPage}\n          />\n          <Route\n            exact\n            component={PageNotFoundPage}\n          />\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n    GET_COIN_DETAILS_SUCCESS,\n    GET_COIN_DETAILS_FAILED\n} from '../actions/actionType';\n\nconst initialState = {};\n\nconst coinDetails = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case GET_COIN_DETAILS_SUCCESS:\n            return { ...state, ...action.payload };\n        case GET_COIN_DETAILS_FAILED:\n            return { ...state, ...initialState };\n        default:\n            return state;\n    }\n};\n\nexport default coinDetails;\n","import {\n    TOGGLE_FAVOURITE\n} from '../actions/actionType';\n\nconst initialState = {};\n\nconst favourites = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case TOGGLE_FAVOURITE: {\n            return {\n                ...state,\n                [action.payload.coin]: action.payload.status ? false : true\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default favourites;\n\n\n","import {\n    GET_TRADE_VOLUME_SUCCESS,\n    GET_TRADE_VOLUME_FAILED,\n    SORT_PRICE,\n    SORT_VOLUME\n} from '../actions/actionType';\n\nconst initialState = {};\n\nconst tradeVolume = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case GET_TRADE_VOLUME_SUCCESS:\n            return { ...state, ...action.payload };\n        case GET_TRADE_VOLUME_FAILED:\n            return { ...state, ...initialState };\n        case SORT_PRICE: {\n            const sortable = Object.entries(state)\n                .sort(([, a], [, b]) => a.last_traded_price - b.last_traded_price)\n                .reduce((r, [k, v]) => ({ ...r, [k]: v }), {});\n            return sortable;\n        }\n        case SORT_VOLUME: {\n            const sortable = Object.entries(state)\n                .sort(([, a], [, b]) => a.volume.volume - b.volume.volume)\n                .reduce((r, [k, v]) => ({ ...r, [k]: v }), {});\n            return sortable;\n        }\n        default:\n            return state;\n    }\n};\n\nexport default tradeVolume;\n\n\n","import { combineReducers } from 'redux';\n\nimport coinDetails from './coinDetails';\nimport favourites from './favourites';\nimport tradeVolume from './tradeVolume';\n\nexport default combineReducers({\n  coinDetails,\n  favourites,\n  tradeVolume\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunkMiddleware from 'redux-thunk';\n\n\nconst config = {\n    key: \"coin-store\",\n    storage,\n    whitelist: [\"favourites\"],\n};\n\nconst persistedReducer = persistReducer(config, rootReducer);\n\nexport const configureStore = (initialState) => {\n    let store = createStore(persistedReducer, initialState, applyMiddleware(thunkMiddleware));\n    let persistor = persistStore(store);\n    return { store, persistor };\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { configureStore } from \"./store/configureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n     <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}